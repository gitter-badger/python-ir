# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Python-ir.org
# This file is distributed under the same license as the Python-ir package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python-ir 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-07 20:31+0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../src/PyMOTW/getopt/index.rst:3
msgid "getopt -- Command line option parsing"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:8
msgid "Command line option parsing"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:9
msgid "1.4"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:11
msgid ""
"The getopt module is the *old-school* command line option parser that "
"supports the conventions established by the Unix function ``getopt()``. "
"It parses an argument sequence, such as ``sys.argv`` and returns a "
"sequence of (option, argument) pairs and a sequence of non-option "
"arguments."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:17
msgid "Supported option syntax includes:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:30
msgid "Function Arguments"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:32
msgid "The getopt function takes three arguments:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:34
msgid ""
"The first argument is the sequence of arguments to be parsed. This "
"usually comes from ``sys.argv[1:]`` (ignoring the program name in "
"``sys.arg[0]``)."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:38
msgid ""
"The second argument is the option definition string for single character "
"options. If one of the options requires an argument, its letter is "
"followed by a colon."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:42
msgid ""
"The third argument, if used, should be a sequence of the long-style "
"option names. Long style options can be more than a single character, "
"such as ``--noarg`` or ``--witharg``. The option names in the sequence "
"should not include the ``--`` prefix. If any long option requires an "
"argument, its name should have a suffix of ``=``."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:48
msgid "Short and long form options can be combined in a single call."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:51
msgid "Short Form Options"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:53
msgid ""
"If a program wants to take 2 options, ``-a``, and ``-b`` with the b "
"option requiring an argument, the value should be ``\"ab:\"``."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:74
msgid "Long Form Options"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:76
msgid ""
"If a program wants to take 2 options, ``--noarg`` and ``--witharg`` the "
"sequence should be ``[ 'noarg', 'witharg=' ]``."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:97
msgid "Example"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:99
msgid ""
"Below is a more complete example program which takes 5 options: ``-o``, "
"``-v``, ``--output``, ``--verbose``, and ``--version``. The ``-o``, "
"``--output``, and ``--version`` options each require an argument."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:108
msgid "The program can be called in a variety of ways."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:127
msgid "A single letter option can be a separate from its argument:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:146
msgid "or combined:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:165
msgid "A long form option can similarly be separate:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:184
msgid "or combined, with ``=``:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:205
msgid "Abbreviating Long Form Options"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:207
msgid ""
"The long form option does not have to be spelled out entirely, so long as"
" a unique prefix is provided:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:227
msgid "If a unique prefix is not provided, an exception is raised."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:251
msgid ""
"Option processing stops as soon as the first non-option argument is "
"encountered."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:273
msgid "GNU-style Option Parsing"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:275
msgid ""
"New in Python 2.3, an additional function ``gnu_getopt()`` was added. It "
"allows option and non-option arguments to be mixed on the command line in"
" any order."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:283
msgid ""
"After changing the call in the previous example, the difference becomes "
"clear:"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:304
msgid "Special Case: ``--``"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:306
msgid ""
"If ``getopt`` encounters ``--`` in the input arguments, it stops "
"processing the remaining arguments as options."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:329
msgid "`getopt <http://docs.python.org/library/getopt.html>`_"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:329
msgid "The standard library documentation for this module."
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:331
msgid ":mod:`optparse`"
msgstr ""

#: ../../src/PyMOTW/getopt/index.rst:332
msgid "The :mod:`optparse` module."
msgstr ""


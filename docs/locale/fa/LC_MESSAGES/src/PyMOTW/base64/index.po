# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Python-ir.org
# This file is distributed under the same license as the Python-ir package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python-ir 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-07 20:31+0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../src/PyMOTW/base64/index.rst:3
msgid "base64 -- Encode binary data into ASCII characters"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:8
msgid ""
"The base64 module contains functions for translating binary data into a "
"subset of ASCII suitable for transmission using plaintext protocols."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:9
msgid "1.4 and later"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:11
msgid ""
"The base64, base32, and base16 encodings convert 8 bit bytes to values "
"with 6, 5, or 4 bits of useful data per byte, allowing non-ASCII bytes to"
" be encoded as ASCII characters for transmission over protocols that "
"require plain ASCII, such as SMTP.  The *base* values correspond to the "
"length of the alphabet used in each encoding.  There are also URL-safe "
"variations of the original encodings that use slightly different results."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:14
msgid "Base 64 Encoding"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:16
msgid "A basic example of encoding some text looks like this:"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:22
msgid ""
"The output shows the 558 bytes of the original source expand to 744 bytes"
" after being encoded."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:25
msgid ""
"There are no carriage returns in the output produced by the library, so I"
" have broken the encoded data up artificially to make it fit better on "
"the page."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:48
msgid "Base 64 Decoding"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:50
msgid ""
"The encoded string can be converted back to the original form by taking 4"
" bytes and converting them to the original 3, using a reverse lookup.  "
"The ``b64decode()`` function does that for you."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:56
msgid ""
"The encoding process looks at each sequence of 24 bits in the input (3 "
"bytes) and encodes those same 24 bits spread over 4 bytes in the output."
"  The last two characters, the ``==``, are padding because the number of "
"bits in the original string was not evenly divisible by 24 in this "
"example."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:73
msgid "URL-safe Variations"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:75
msgid ""
"Because the default base64 alphabet may use ``+`` and ``/``, and those "
"two characters are used in URLs, it became necessary to specify an "
"alternate encoding with substitutes for those characters.  The ``+`` is "
"replaced with a ``-``, and ``/`` is replaced with underscore (``_``).  "
"Otherwise, the alphabet is the same."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:102
msgid "Other Encodings"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:104
msgid ""
"Besides base 64, the module provides functions for working with base 32 "
"and base 16 (hex) encoded data."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:124
msgid "The base 16 functions work with the hexadecimal alphabet."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:147
msgid "`base64 <http://docs.python.org/library/base64.html>`_"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:147
msgid "The standard library documentation for this module."
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:149
msgid ":rfc:`3548`"
msgstr ""

#: ../../src/PyMOTW/base64/index.rst:150
msgid "The Base16, Base32, and Base64 Data Encodings"
msgstr ""


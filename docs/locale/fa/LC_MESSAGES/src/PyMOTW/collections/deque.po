# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Python-ir.org
# This file is distributed under the same license as the Python-ir package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python-ir 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-07 20:31+0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../src/PyMOTW/collections/deque.rst:5
msgid "Deque"
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:7
msgid ""
"A double-ended queue, or :class:`deque`, supports adding and removing "
"elements from either end. The more commonly used stacks and queues are "
"degenerate forms of deques, where the inputs and outputs are restricted "
"to a single end."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:16
msgid ""
"Since deques are a type of sequence container, they support some of the "
"same operations that lists support, such as examining the contents with "
":func:`__getitem__`, determining length, and removing elements from the "
"middle by matching identity."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:38
msgid "Populating"
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:40
msgid ""
"A deque can be populated from either end, termed \"left\" and \"right\" "
"in the Python implementation."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:47
msgid ""
"Notice that :func:`extendleft` iterates over its input and performs the "
"equivalent of an :func:`appendleft` for each item. The end result is the "
":class:`deque` contains the input sequence in reverse order."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:67
msgid "Consuming"
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:69
msgid ""
"Similarly, the elements of the :class:`deque` can be consumed from both "
"or either end, depending on the algorithm being applied."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:76
msgid ""
"Use :func:`pop` to remove an item from the \"right\" end of the "
":class:`deque` and :func:`popleft` to take from the \"left\" end."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:108
msgid ""
"Since deques are thread-safe, the contents can even be consumed from both"
" ends at the same time from separate threads."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:115
msgid ""
"The threads in this example alternate between each end, removing items "
"until the :class:`deque` is empty."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:143
msgid "Rotating"
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:145
msgid ""
"Another useful capability of the :class:`deque` is to rotate it in either"
" direction, to skip over some items."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:152
msgid ""
"Rotating the :class:`deque` to the right (using a positive rotation) "
"takes items from the right end and moves them to the left end. Rotating "
"to the left (with a negative value) takes items from the left end and "
"moves them to the right end.  It may help to visualize the items in the "
"deque as being engraved along the edge of a dial."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:175
msgid "`WikiPedia: Deque <http://en.wikipedia.org/wiki/Deque>`_"
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:175
msgid "A discussion of the deque data structure."
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:177
msgid "`Deque Recipes <http://docs.python.org/lib/deque-recipes.html>`_"
msgstr ""

#: ../../src/PyMOTW/collections/deque.rst:178
msgid ""
"Examples of using deques in algorithms from the standard library "
"documentation."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Python-ir.org
# This file is distributed under the same license as the Python-ir package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python-ir 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-07 20:31+0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../src/PyMOTW/collections/ordereddict.rst:3
msgid "OrderedDict"
msgstr ""

#: ../../src/PyMOTW/collections/ordereddict.rst:5
msgid ""
"An :class:`OrderedDict` is a dictionary subclass that remembers the order"
" in which its contents are added."
msgstr ""

#: ../../src/PyMOTW/collections/ordereddict.rst:12
msgid ""
"A regular :class:`dict` does not track the insertion order, and iterating"
" over it produces the values in an arbitrary order.  In an "
":class:`OrderedDict`, by contrast, the order the items are inserted is "
"remembered and used when creating an iterator."
msgstr ""

#: ../../src/PyMOTW/collections/ordereddict.rst:42
msgid "Equality"
msgstr ""

#: ../../src/PyMOTW/collections/ordereddict.rst:44
msgid ""
"A regular :class:`dict` looks at its contents when testing for equality."
"  An :class:`OrderedDict` also considers the order the items were added."
msgstr ""

#: ../../src/PyMOTW/collections/ordereddict.rst:52
msgid ""
"In this case, since the two ordered dictionaries are created from values "
"in a different order, they are considered to be different."
msgstr ""


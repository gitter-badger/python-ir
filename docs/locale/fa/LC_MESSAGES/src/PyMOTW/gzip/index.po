# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Python-ir.org
# This file is distributed under the same license as the Python-ir package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python-ir 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-07 20:31+0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../src/PyMOTW/gzip/index.rst:3
msgid "gzip -- Read and write GNU zip files"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:8
msgid "Read and write gzip files."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:9
msgid "1.5.2 and later"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:11
msgid ""
"The gzip module provides a file-like interface to GNU zip files, using "
":mod:`zlib` to compress and uncompress the data."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:15
msgid "Writing Compressed Files"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:17
msgid ""
"The module-level function ``open()`` creates an instance of the file-like"
" class GzipFile.  The usual methods for writing and reading data are "
"provided.  To write data into a compressed file, open the file with mode "
"``'w'``."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:39
msgid ""
"Different amounts of compression can be used by passing a *compresslevel*"
" argument.  Valid values range from 1 to 9, inclusive. Lower values are "
"faster and result in less compression.  Higher values are slower and "
"compress more, up to a point."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:48
msgid ""
"The center column of numbers in the output of the script is the size in "
"bytes of the files produced.  As you see, for this input data, the higher"
" compression values do not necessarily pay off in decreased storage "
"space.  Results will vary, depending on the input data."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:77
msgid ""
"A GzipFile instance also includes a ``writelines()`` method that can be "
"used to write a sequence of strings."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:107
msgid "Reading Compressed Data"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:109
msgid ""
"To read data back from previously compressed files, simply open the file "
"with mode ``'r'``."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:116
msgid ""
"This example reads  the file  written by  ``gzip_write.py``  from the "
"previous section."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:132
msgid ""
"While reading a file, it is also possible to seek and read only part of "
"the data."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:139
msgid ""
"The ``seek()`` position is relative to the *uncompressed* data, so the "
"caller does not even need to know that the data file is compressed."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:162
msgid "Working with Streams"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:164
msgid ""
"When working with a data stream instead of a file, use the GzipFile class"
" directly to compress or uncompress it.  This is useful when the data is "
"being transmitted over a socket or from read an existing (already open) "
"file handle.  A StringIO buffer can also be used."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:175
msgid ""
"When re-reading the previously compressed data, I pass an explicit length"
" to ``read()``.  Leaving the length off resulted in a CRC error, possibly"
" because StringIO returned an empty string before reporting EOF.  If you "
"are working with streams of compressed data, you may want to prefix the "
"data with an integer representing the actual amount of data to be read."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:223
msgid "`gzip <http://docs.python.org/library/gzip.html>`_"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:223
msgid "The standard library documentation for this module."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:226
msgid ":mod:`zlib`"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:226
msgid "The zlib module is a lower-level interface to gzip compression."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:229
msgid ":mod:`zipfile`"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:229
msgid "The zipfile module gives access to ZIP archives."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:232
msgid ":mod:`bz2`"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:232
msgid "The bz2 module uses the bzip2 compression format."
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:234
msgid ":mod:`tarfile`"
msgstr ""

#: ../../src/PyMOTW/gzip/index.rst:235
msgid ""
"The tarfile module includes built-in support for reading compressed tar "
"archives."
msgstr ""

